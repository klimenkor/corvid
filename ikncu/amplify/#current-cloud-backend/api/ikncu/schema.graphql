type Tier @model {
  id: ID!
  name: String!
  users: [User] @connection (name: "UserTier")
}

type Category @model {
  id: ID!
  name: String!
  faces: [Face] @connection (name: "FaceCategory")
}

type User @model {
  id: ID!
  email: String!
  labels: [String],
  tier: Tier @connection (name: "UserTier")
  cameras: [Camera] @connection (name: "UserCamera")
  motions: [Motion] @connection (name: "UserMotion", keyField: "userId", sortField: "occurred")
  faces: [Face] @connection (name: "UserFace")
}

type Camera @model {
  id: ID!
  name: String!
  active: Boolean!
  user: User @connection (name: "UserCamera")
  motions: [Motion] @connection (name: "CameraMotion", sortField: "occurred")
}

type Face @model {
  id: ID!
  name: String!
  active: Boolean!
  category: Category @connection (name: "FaceCategory")
  user: User @connection (name: "UserFace")
}

type Label {
  name: String,
  confidence:  Float
}

type Motion @model {
  id: ID!
  labels: [Label]
  frame: String!
  occurred: String! #AWSDateTime
  userId: ID
  cameraId: ID
  camera: Camera @connection (name: "CameraMotion", keyField: "cameraId")
  user: User @connection (name: "UserMotion", keyField: "userId")
}
