{
  "service": {
    "service": "ikncu",
    "serviceObject": {
      "name": "ikncu"
    },
    "provider": {
      "stage": "dev",
      "region": "us-east-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "ApiUserPostLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ikncu-dev-ApiUserPost"
            }
          },
          "ApiUserGetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ikncu-dev-ApiUserGet"
            }
          },
          "ApiTierPostLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ikncu-dev-ApiTierPost"
            }
          },
          "ApiProxyDemoFunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ikncu-dev-ApiProxyDemoFunction"
            }
          },
          "ApiUserPostLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ikncu/dev/1550715880822-2019-02-21T02:24:40.822Z/ikncu.zip"
              },
              "FunctionName": "ikncu-dev-ApiUserPost",
              "Handler": "api/user.post",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IkncuLambdaRole",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6
            },
            "DependsOn": [
              "ApiUserPostLogGroup",
              "IkncuLambdaRole"
            ]
          },
          "ApiUserPostLambdaVersionjzoigykDjyGMBiRw1MNVncbJLGtgNJXFemj2ltaG8w": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiUserPostLambdaFunction"
              },
              "CodeSha256": "+bqkhkM/2t67WgBKpdVg5UNpuTRmplPsGHWR/HL8tgQ="
            }
          },
          "ApiUserGetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ikncu/dev/1550715880822-2019-02-21T02:24:40.822Z/ikncu.zip"
              },
              "FunctionName": "ikncu-dev-ApiUserGet",
              "Handler": "api/user.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IkncuLambdaRole",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6
            },
            "DependsOn": [
              "ApiUserGetLogGroup",
              "IkncuLambdaRole"
            ]
          },
          "ApiUserGetLambdaVersionkrexXzEkm8QIvHTyS3jeEjP57viGXV4Co2EKxYSYpWQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiUserGetLambdaFunction"
              },
              "CodeSha256": "+bqkhkM/2t67WgBKpdVg5UNpuTRmplPsGHWR/HL8tgQ="
            }
          },
          "ApiTierPostLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ikncu/dev/1550715880822-2019-02-21T02:24:40.822Z/ikncu.zip"
              },
              "FunctionName": "ikncu-dev-ApiTierPost",
              "Handler": "api/tier.post",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IkncuLambdaRole",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6
            },
            "DependsOn": [
              "ApiTierPostLogGroup",
              "IkncuLambdaRole"
            ]
          },
          "ApiTierPostLambdaVersionNH1gDgEG25gWKZQC6OyRs45Ir0caaJZPxdEDulJAY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiTierPostLambdaFunction"
              },
              "CodeSha256": "+bqkhkM/2t67WgBKpdVg5UNpuTRmplPsGHWR/HL8tgQ="
            }
          },
          "ApiProxyDemoFunctionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ikncu/dev/1550715880822-2019-02-21T02:24:40.822Z/ikncu.zip"
              },
              "FunctionName": "ikncu-dev-ApiProxyDemoFunction",
              "Handler": "api/cameras.post",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IkncuLambdaRole",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": {
                    "Ref": "Table"
                  }
                }
              }
            },
            "DependsOn": [
              "ApiProxyDemoFunctionLogGroup",
              "IkncuLambdaRole"
            ]
          },
          "ApiProxyDemoFunctionLambdaVersionLwLTpSXMyvLl2XpdVtG2X23c3zxjcfBMNWuv6NH8FzA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiProxyDemoFunctionLambdaFunction"
              },
              "CodeSha256": "+bqkhkM/2t67WgBKpdVg5UNpuTRmplPsGHWR/HL8tgQ="
            }
          },
          "IkncuLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "IkncuLambda",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "DynamoDBWriteAccess",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Join": [
                              ":",
                              [
                                "arn:aws:logs",
                                {
                                  "Ref": "AWS::Region"
                                },
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                "log-group:/aws/lambda/*:*:*"
                              ]
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "UserTable",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "IkncuBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "ikncu.com",
              "WebsiteConfiguration": {
                "IndexDocument": "index.html"
              }
            }
          },
          "IkncuBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "IkncuBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": [
                      "s3:GetObject"
                    ],
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "IkncuBucket"
                          },
                          "/*"
                        ]
                      ]
                    }
                  }
                ]
              }
            }
          },
          "CognitoUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "Ikncu",
              "UsernameAttributes": [
                "email"
              ],
              "AutoVerifiedAttributes": [
                "email"
              ]
            }
          },
          "CognitoUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "IkncuWebApp",
              "GenerateSecret": false,
              "ExplicitAuthFlows": [
                "ADMIN_NO_SRP_AUTH"
              ],
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              }
            }
          },
          "CognitoIdPool": {
            "Type": "AWS::Cognito::IdentityPool",
            "Properties": {
              "IdentityPoolName": {
                "Ref": "AWS::StackName"
              },
              "CognitoIdentityProviders": [
                {
                  "ClientId": {
                    "Ref": "CognitoUserPoolClient"
                  },
                  "ProviderName": {
                    "Fn::GetAtt": [
                      "CognitoUserPool",
                      "ProviderName"
                    ]
                  }
                }
              ],
              "AllowUnauthenticatedIdentities": false
            }
          },
          "UserTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "Id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "TierId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "Id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "gsiTier",
                  "KeySchema": [
                    {
                      "AttributeName": "TierId",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "KEYS_ONLY"
                  },
                  "ProvisionedThroughput": {
                    "ReadCapacityUnits": "1",
                    "WriteCapacityUnits": "1"
                  }
                }
              ]
            }
          },
          "TierTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "Id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "Id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "CameraTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "Id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "Id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "MotionTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "Id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "Id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "FaceTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "Id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "Id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "CategoryTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "Id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "Id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "IkncuApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "Ikncu",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "IkncuApiGatewayResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "IkncuApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "user",
              "RestApiId": {
                "Ref": "IkncuApiGatewayRestApi"
              }
            }
          },
          "IkncuApiGatewayUserProxyResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "IkncuApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "user/{id}",
              "RestApiId": {
                "Ref": "IkncuApiGatewayRestApi"
              }
            }
          },
          "IkncuApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "Name": "Ikncu",
              "RestApiId": {
                "Ref": "IkncuApiGatewayRestApi"
              },
              "Type": "COGNITO_USER_POOLS",
              "ProviderARNs": [
                {
                  "Fn::GetAtt": [
                    "CognitoUserPool",
                    "Arn"
                  ]
                }
              ],
              "IdentitySource": "method.request.header.Authorization"
            }
          },
          "IkncuOptionsMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "RestApiId": {
                "Ref": "IkncuApiGatewayRestApi"
              },
              "ResourceId": {
                "Ref": "IkncuApiGatewayResource"
              },
              "HttpMethod": "OPTIONS",
              "Integration": {
                "IntegrationResponses": [
                  {
                    "StatusCode": 200,
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                      "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                      "method.response.header.Access-Control-Allow-Origin": "'*'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ],
                "PassthroughBehavior": "WHEN_NO_MATCH",
                "RequestTemplates": {
                  "application/json": "{\"statusCode\": 200}"
                },
                "Type": "MOCK"
              },
              "MethodResponses": [
                {
                  "StatusCode": 200,
                  "ResponseModels": {
                    "application/json": "Empty"
                  },
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Headers": false,
                    "method.response.header.Access-Control-Allow-Methods": false,
                    "method.response.header.Access-Control-Allow-Origin": false
                  }
                }
              ]
            }
          },
          "IkncuUserPostMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizerId": {
                "Ref": "IkncuApiGatewayAuthorizer"
              },
              "AuthorizationType": "COGNITO_USER_POOLS",
              "HttpMethod": "POST",
              "ResourceId": {
                "Ref": "IkncuApiGatewayResource"
              },
              "RestApiId": {
                "Ref": "IkncuApiGatewayRestApi"
              },
              "Integration": {
                "Type": "AWS_PROXY",
                "IntegrationHttpMethod": "POST",
                "Uri": {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:apigateway",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambda",
                      {
                        "Fn::Join": [
                          "/",
                          [
                            "path",
                            "2015-03-31",
                            "functions",
                            {
                              "Fn::GetAtt": [
                                "ApiUserPostLambdaFunction",
                                "Arn"
                              ]
                            },
                            "invocations"
                          ]
                        ]
                      }
                    ]
                  ]
                }
              }
            }
          },
          "IkncuUserGetMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizerId": {
                "Ref": "IkncuApiGatewayAuthorizer"
              },
              "AuthorizationType": "COGNITO_USER_POOLS",
              "HttpMethod": "GET",
              "ResourceId": {
                "Ref": "IkncuApiGatewayResource"
              },
              "RestApiId": {
                "Ref": "IkncuApiGatewayRestApi"
              },
              "Integration": {
                "Type": "AWS_PROXY",
                "IntegrationHttpMethod": "GET",
                "Uri": {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:apigateway",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambda",
                      {
                        "Fn::Join": [
                          "/",
                          [
                            "path",
                            "2015-03-31",
                            "functions",
                            {
                              "Fn::GetAtt": [
                                "ApiUserGetLambdaFunction",
                                "Arn"
                              ]
                            },
                            "invocations"
                          ]
                        ]
                      }
                    ]
                  ]
                }
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "ApiUserPostLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiUserPostLambdaVersionjzoigykDjyGMBiRw1MNVncbJLGtgNJXFemj2ltaG8w"
            }
          },
          "ApiUserGetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiUserGetLambdaVersionkrexXzEkm8QIvHTyS3jeEjP57viGXV4Co2EKxYSYpWQ"
            }
          },
          "ApiTierPostLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiTierPostLambdaVersionNH1gDgEG25gWKZQC6OyRs45Ir0caaJZPxdEDulJAY"
            }
          },
          "ApiProxyDemoFunctionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiProxyDemoFunctionLambdaVersionLwLTpSXMyvLl2XpdVtG2X23c3zxjcfBMNWuv6NH8FzA"
            }
          },
          "IkncuBucketURL": {
            "Description": "Ikncu Bucket Website URL",
            "Value": {
              "Fn::GetAtt": [
                "IkncuBucket",
                "WebsiteURL"
              ]
            }
          },
          "UserDynamoDbARN": {
            "Description": "User DynamoDB ARN",
            "Value": {
              "Fn::GetAtt": [
                "UserTable",
                "Arn"
              ]
            }
          },
          "TierDynamoDbARN": {
            "Description": "Tier DynamoDB ARN",
            "Value": {
              "Fn::GetAtt": [
                "TierTable",
                "Arn"
              ]
            }
          },
          "CameraDynamoDbARN": {
            "Description": "Camera DynamoDB ARN",
            "Value": {
              "Fn::GetAtt": [
                "CameraTable",
                "Arn"
              ]
            }
          },
          "MotionDynamoDbARN": {
            "Description": "Motion DynamoDB ARN",
            "Value": {
              "Fn::GetAtt": [
                "MotionTable",
                "Arn"
              ]
            }
          },
          "CategoryDynamoDbARN": {
            "Description": "Category DynamoDB ARN",
            "Value": {
              "Fn::GetAtt": [
                "CategoryTable",
                "Arn"
              ]
            }
          },
          "FaceDynamoDbARN": {
            "Description": "Face DynamoDB ARN",
            "Value": {
              "Fn::GetAtt": [
                "FaceTable",
                "Arn"
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "ApiUserPost": {
        "handler": "api/user.post",
        "role": "IkncuLambdaRole",
        "package": {
          "include": [
            "settings.js"
          ]
        },
        "events": [],
        "name": "ikncu-dev-ApiUserPost",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "ApiUserGet": {
        "handler": "api/user.get",
        "role": "IkncuLambdaRole",
        "package": {
          "include": [
            "settings.js"
          ]
        },
        "events": [],
        "name": "ikncu-dev-ApiUserGet",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "ApiTierPost": {
        "handler": "api/tier.post",
        "role": "IkncuLambdaRole",
        "package": {
          "include": [
            "settings.js"
          ]
        },
        "events": [],
        "name": "ikncu-dev-ApiTierPost",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "ApiProxyDemoFunction": {
        "handler": "api/cameras.post",
        "role": "IkncuLambdaRole",
        "environment": {
          "TABLE_NAME": {
            "Ref": "Table"
          }
        },
        "events": [
          {
            "api": {
              "path": "cameras/add",
              "method": "post"
            }
          },
          {
            "api": {
              "path": "cameras/update",
              "method": "put"
            }
          },
          {
            "api": {
              "path": "cameras/delete",
              "method": "delete"
            }
          },
          {
            "api": {
              "path": "cameras",
              "method": "get"
            }
          }
        ],
        "package": {
          "include": [
            "settings.js"
          ]
        },
        "name": "ikncu-dev-ApiProxyDemoFunction",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "IkncuLambdaRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "IkncuLambda",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "DynamoDBWriteAccess",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Join": [
                            ":",
                            [
                              "arn:aws:logs",
                              {
                                "Ref": "AWS::Region"
                              },
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "log-group:/aws/lambda/*:*:*"
                            ]
                          ]
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "UserTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "IkncuBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "ikncu.com",
            "WebsiteConfiguration": {
              "IndexDocument": "index.html"
            }
          }
        },
        "IkncuBucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "IkncuBucket"
            },
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:s3:::",
                        {
                          "Ref": "IkncuBucket"
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ]
            }
          }
        },
        "CognitoUserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": "Ikncu",
            "UsernameAttributes": [
              "email"
            ],
            "AutoVerifiedAttributes": [
              "email"
            ]
          }
        },
        "CognitoUserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "IkncuWebApp",
            "GenerateSecret": false,
            "ExplicitAuthFlows": [
              "ADMIN_NO_SRP_AUTH"
            ],
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            }
          }
        },
        "CognitoIdPool": {
          "Type": "AWS::Cognito::IdentityPool",
          "Properties": {
            "IdentityPoolName": {
              "Ref": "AWS::StackName"
            },
            "CognitoIdentityProviders": [
              {
                "ClientId": {
                  "Ref": "CognitoUserPoolClient"
                },
                "ProviderName": {
                  "Fn::GetAtt": [
                    "CognitoUserPool",
                    "ProviderName"
                  ]
                }
              }
            ],
            "AllowUnauthenticatedIdentities": false
          }
        },
        "UserTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "Id",
                "AttributeType": "S"
              },
              {
                "AttributeName": "TierId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "Id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "gsiTier",
                "KeySchema": [
                  {
                    "AttributeName": "TierId",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "KEYS_ONLY"
                },
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": "1",
                  "WriteCapacityUnits": "1"
                }
              }
            ]
          }
        },
        "TierTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "Id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "Id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "CameraTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "Id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "Id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "MotionTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "Id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "Id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "FaceTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "Id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "Id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "CategoryTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "Id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "Id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "IkncuApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "Ikncu",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            }
          }
        },
        "IkncuApiGatewayResource": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "IkncuApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "user",
            "RestApiId": {
              "Ref": "IkncuApiGatewayRestApi"
            }
          }
        },
        "IkncuApiGatewayUserProxyResource": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "IkncuApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "user/{id}",
            "RestApiId": {
              "Ref": "IkncuApiGatewayRestApi"
            }
          }
        },
        "IkncuApiGatewayAuthorizer": {
          "Type": "AWS::ApiGateway::Authorizer",
          "Properties": {
            "Name": "Ikncu",
            "RestApiId": {
              "Ref": "IkncuApiGatewayRestApi"
            },
            "Type": "COGNITO_USER_POOLS",
            "ProviderARNs": [
              {
                "Fn::GetAtt": [
                  "CognitoUserPool",
                  "Arn"
                ]
              }
            ],
            "IdentitySource": "method.request.header.Authorization"
          }
        },
        "IkncuOptionsMethod": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "RestApiId": {
              "Ref": "IkncuApiGatewayRestApi"
            },
            "ResourceId": {
              "Ref": "IkncuApiGatewayResource"
            },
            "HttpMethod": "OPTIONS",
            "Integration": {
              "IntegrationResponses": [
                {
                  "StatusCode": 200,
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                    "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                    "method.response.header.Access-Control-Allow-Origin": "'*'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ],
              "PassthroughBehavior": "WHEN_NO_MATCH",
              "RequestTemplates": {
                "application/json": "{\"statusCode\": 200}"
              },
              "Type": "MOCK"
            },
            "MethodResponses": [
              {
                "StatusCode": 200,
                "ResponseModels": {
                  "application/json": "Empty"
                },
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Headers": false,
                  "method.response.header.Access-Control-Allow-Methods": false,
                  "method.response.header.Access-Control-Allow-Origin": false
                }
              }
            ]
          }
        },
        "IkncuUserPostMethod": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizerId": {
              "Ref": "IkncuApiGatewayAuthorizer"
            },
            "AuthorizationType": "COGNITO_USER_POOLS",
            "HttpMethod": "POST",
            "ResourceId": {
              "Ref": "IkncuApiGatewayResource"
            },
            "RestApiId": {
              "Ref": "IkncuApiGatewayRestApi"
            },
            "Integration": {
              "Type": "AWS_PROXY",
              "IntegrationHttpMethod": "POST",
              "Uri": {
                "Fn::Join": [
                  ":",
                  [
                    "arn:aws:apigateway",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambda",
                    {
                      "Fn::Join": [
                        "/",
                        [
                          "path",
                          "2015-03-31",
                          "functions",
                          {
                            "Fn::GetAtt": [
                              "ApiUserPostLambdaFunction",
                              "Arn"
                            ]
                          },
                          "invocations"
                        ]
                      ]
                    }
                  ]
                ]
              }
            }
          }
        },
        "IkncuUserGetMethod": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizerId": {
              "Ref": "IkncuApiGatewayAuthorizer"
            },
            "AuthorizationType": "COGNITO_USER_POOLS",
            "HttpMethod": "GET",
            "ResourceId": {
              "Ref": "IkncuApiGatewayResource"
            },
            "RestApiId": {
              "Ref": "IkncuApiGatewayRestApi"
            },
            "Integration": {
              "Type": "AWS_PROXY",
              "IntegrationHttpMethod": "GET",
              "Uri": {
                "Fn::Join": [
                  ":",
                  [
                    "arn:aws:apigateway",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambda",
                    {
                      "Fn::Join": [
                        "/",
                        [
                          "path",
                          "2015-03-31",
                          "functions",
                          {
                            "Fn::GetAtt": [
                              "ApiUserGetLambdaFunction",
                              "Arn"
                            ]
                          },
                          "invocations"
                        ]
                      ]
                    }
                  ]
                ]
              }
            }
          }
        }
      },
      "Outputs": {
        "IkncuBucketURL": {
          "Description": "Ikncu Bucket Website URL",
          "Value": {
            "Fn::GetAtt": [
              "IkncuBucket",
              "WebsiteURL"
            ]
          }
        },
        "UserDynamoDbARN": {
          "Description": "User DynamoDB ARN",
          "Value": {
            "Fn::GetAtt": [
              "UserTable",
              "Arn"
            ]
          }
        },
        "TierDynamoDbARN": {
          "Description": "Tier DynamoDB ARN",
          "Value": {
            "Fn::GetAtt": [
              "TierTable",
              "Arn"
            ]
          }
        },
        "CameraDynamoDbARN": {
          "Description": "Camera DynamoDB ARN",
          "Value": {
            "Fn::GetAtt": [
              "CameraTable",
              "Arn"
            ]
          }
        },
        "MotionDynamoDbARN": {
          "Description": "Motion DynamoDB ARN",
          "Value": {
            "Fn::GetAtt": [
              "MotionTable",
              "Arn"
            ]
          }
        },
        "CategoryDynamoDbARN": {
          "Description": "Category DynamoDB ARN",
          "Value": {
            "Fn::GetAtt": [
              "CategoryTable",
              "Arn"
            ]
          }
        },
        "FaceDynamoDbARN": {
          "Description": "Face DynamoDB ARN",
          "Value": {
            "Fn::GetAtt": [
              "FaceTable",
              "Arn"
            ]
          }
        }
      }
    },
    "layers": {},
    "artifact": "C:\\dev\\corvid\\ikncu\\.serverless\\ikncu.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/ikncu/dev/1550715880822-2019-02-21T02:24:40.822Z",
    "artifact": "ikncu.zip"
  }
}